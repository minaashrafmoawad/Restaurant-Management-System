
@model RestaurantManagementSystem.Domain.Models.Category

@{
    ViewData["Title"] = $"Menu Items in {Model.Name}";
}

<h1>@Model.Name Menu</h1>
<p>@Model.Description</p>

@if (Model.MenuItems != null && Model.MenuItems.Any(mi => mi.IsAvailable))
{
    <div class="row">
        @foreach (var item in Model.MenuItems.Where(mi => mi.IsAvailable))
        {
            <div class="col-md-4 mb-3">
                <div class="card h-100 rounded">
                    @if (!string.IsNullOrEmpty(item.ImageURL))
                    {
                        <img src="@item.ImageURL" class="card-img-top rounded-top" alt="@item.Name" style="height: 180px; object-fit: cover;"
                             onerror="this.onerror=null;this.src='https://placehold.co/400x180/E0E0E0/000000?text=No+Image';">
                    }
                    else
                    {
                        <img src="https://placehold.co/400x180/E0E0E0/000000?text=No+Image" class="card-img-top rounded-top" alt="No Image" style="height: 180px; object-fit: cover;">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Description</p>
                        <p class="card-text"><strong>Price:</strong> @item.Price?.ToString("C")</p>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary btn-sm rounded">Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No available menu items in this category.</p>
}

<div>
    <a asp-action="Index" class="btn btn-outline-secondary rounded">Back to All Categories</a>
</div>